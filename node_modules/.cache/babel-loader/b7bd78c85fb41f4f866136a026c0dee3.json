{"ast":null,"code":"var _jsxFileName = \"/home/ryan/School/KBS-diabetes-demo/src/components/Cause.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { getEye } from \"../apis/faceSkinApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cause = _ref => {\n  _s();\n\n  let {\n    inputCauseValue,\n    setInputCauseValue\n  } = _ref;\n  const [eyes, setEyes] = useState([]); // const handleInputCauseValue = (e) => {\n  //   const causeArr = inputCauseValue.cause.map((el) => el);\n  //   causeArr.push(e.target.value);\n  //   setInputCauseValue({\n  //     ...inputCauseValue,\n  //     [e.target.name]: causeArr,\n  //   });\n  // };\n\n  const handleCheckValue = item => cb => {\n    var _inputCauseValue$caus;\n\n    const eyeArr = inputCauseValue.cause.map(el => el);\n\n    if (inputCauseValue !== null && inputCauseValue !== void 0 && (_inputCauseValue$caus = inputCauseValue.cause) !== null && _inputCauseValue$caus !== void 0 && _inputCauseValue$caus.includes(item.description)) {\n      var _eyeArr;\n\n      eyeArr = (_eyeArr = eyeArr) === null || _eyeArr === void 0 ? void 0 : _eyeArr.filter(value => value !== item.description);\n    } else eyeArr.push(item.description);\n\n    setInputCauseValue({ ...inputCauseValue,\n      [cb.target.name]: eyeArr\n    });\n  };\n\n  useEffect(() => {\n    getEye().then(res => {\n      setEyes(res.data);\n    });\n  }, [inputCauseValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cause big-part\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"first-label\",\n      htmlFor: \"cause\",\n      children: \"Tri\\u1EC7u ch\\u1EE9ng tr\\xEAn m\\u1EAFt:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: eyes.map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        md: 4,\n        xxl: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: handleCheckValue(item) //onChange={(e) => handleInputCauseValue(e)}\n          ,\n          type: \"checkbox\",\n          id: `eye${index + 1}`,\n          name: \"eye\",\n          value: `reason${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `cause${index + 1}`,\n          children: [\" \", item.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cause, \"CvpJ6iGO1yDXfOEWKDyuLlOG3zM=\");\n\n_c = Cause;\nexport default Cause;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cause\");","map":{"version":3,"sources":["/home/ryan/School/KBS-diabetes-demo/src/components/Cause.jsx"],"names":["React","useEffect","useState","Row","Col","getEye","Cause","inputCauseValue","setInputCauseValue","eyes","setEyes","handleCheckValue","item","cb","eyeArr","cause","map","el","includes","description","filter","value","push","target","name","then","res","data","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,MAAT,QAAuB,qBAAvB;;;AAEA,MAAMC,KAAK,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAA4C;AACzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CADyD,CAEzD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,QAAMS,gBAAgB,GAAIC,IAAD,IAAWC,EAAD,IAAQ;AAAA;;AACzC,UAAMC,MAAM,GAAGP,eAAe,CAACQ,KAAhB,CAAsBC,GAAtB,CAA2BC,EAAD,IAAQA,EAAlC,CAAf;;AACA,QAAGV,eAAH,aAAGA,eAAH,wCAAGA,eAAe,CAAEQ,KAApB,kDAAG,sBAAwBG,QAAxB,CAAiCN,IAAI,CAACO,WAAtC,CAAH,EAAuD;AAAA;;AACrDL,MAAAA,MAAM,cAAGA,MAAH,4CAAG,QAAQM,MAAR,CAAgBC,KAAD,IAAUA,KAAK,KAAGT,IAAI,CAACO,WAAtC,CAAT;AACD,KAFD,MAEOL,MAAM,CAACQ,IAAP,CAAYV,IAAI,CAACO,WAAjB;;AACPX,IAAAA,kBAAkB,CAAC,EACjB,GAAGD,eADc;AAEjB,OAACM,EAAE,CAACU,MAAH,CAAUC,IAAX,GAAkBV;AAFD,KAAD,CAAlB;AAID,GATD;;AAWAb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,GAAGoB,IAAT,CAAeC,GAAD,IAAS;AACrBhB,MAAAA,OAAO,CAACgB,GAAG,CAACC,IAAL,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,CAACpB,eAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,OAAO,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AAAA,gBACGE,IAAI,CAACO,GAAL,CAAS,CAACJ,IAAD,EAAOgB,KAAP,kBACR,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,GAAG,EAAE,CAAxB;AAAA,gCACE;AACC,UAAA,OAAO,EAAEjB,gBAAgB,CAACC,IAAD,CAD1B,CAEE;AAFF;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,EAAE,EAAG,MAAKgB,KAAK,GAAG,CAAE,EAJtB;AAKE,UAAA,IAAI,EAAC,KALP;AAME,UAAA,KAAK,EAAG,SAAQA,KAAK,GAAG,CAAE;AAN5B;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAO,UAAA,OAAO,EAAG,QAAOA,KAAK,GAAG,CAAE,EAAlC;AAAA,0BAAuChB,IAAI,CAACO,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAAgCS,KAAhC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAlDD;;GAAMtB,K;;KAAAA,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { getEye } from \"../apis/faceSkinApi\";\n\nconst Cause = ({ inputCauseValue, setInputCauseValue }) => {\n  const [eyes, setEyes] = useState([])\n  // const handleInputCauseValue = (e) => {\n  //   const causeArr = inputCauseValue.cause.map((el) => el);\n  //   causeArr.push(e.target.value);\n\n  //   setInputCauseValue({\n  //     ...inputCauseValue,\n  //     [e.target.name]: causeArr,\n  //   });\n  // };\n  const handleCheckValue = (item) => (cb) => {\n    const eyeArr = inputCauseValue.cause.map((el) => el);\n    if(inputCauseValue?.cause?.includes(item.description)) {\n      eyeArr = eyeArr?.filter((value)=> value!==item.description)\n    } else eyeArr.push(item.description);\n    setInputCauseValue({\n      ...inputCauseValue,\n      [cb.target.name]: eyeArr,\n    });\n  }\n\n  useEffect(() => {\n    getEye().then((res) => {\n      setEyes(res.data)\n    })\n  }, [inputCauseValue]);\n\n  return (\n    <div className=\"cause big-part\">\n      <label className=\"first-label\" htmlFor=\"cause\">\n        Triệu chứng trên mắt:\n      </label>\n      <Row>\n        {eyes.map((item, index) => (\n          <Col xs={6} md={4} xxl={3} key={index}>\n            <input\n             onClick={handleCheckValue(item)}\n              //onChange={(e) => handleInputCauseValue(e)}\n              type=\"checkbox\"\n              id={`eye${index + 1}`}\n              name=\"eye\"\n              value={`reason${index + 1}`}\n            />\n            <label htmlFor={`cause${index + 1}`}> {item.description}</label>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default Cause;\n"]},"metadata":{},"sourceType":"module"}
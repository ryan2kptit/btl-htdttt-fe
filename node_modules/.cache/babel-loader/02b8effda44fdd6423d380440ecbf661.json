{"ast":null,"code":"var _jsxFileName = \"/home/ryan/School/KBS-diabetes-demo/src/components/MountSynptom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { getMouth } from \"../apis/faceSkinApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MountSynptom = _ref => {\n  _s();\n\n  let {\n    inputCauseValue,\n    setInputCauseValue\n  } = _ref;\n  const [mouth, setMouth] = useState([]); // const handleInputCauseValue = (e) => {\n  //   const causeArr = inputCauseValue.cause.map((el) => el);\n  //   causeArr.push(e.target.value);\n  //   setInputCauseValue({\n  //     ...inputCauseValue,\n  //     [e.target.name]: causeArr,\n  //   });\n  // };\n\n  const handleCheckValue = item => cb => {\n    var _inputHabitValue, _inputHabitValue$habi;\n\n    const mouthArray = inputHabitValue.habit.map(el => el);\n\n    if ((_inputHabitValue = inputHabitValue) !== null && _inputHabitValue !== void 0 && (_inputHabitValue$habi = _inputHabitValue.habit) !== null && _inputHabitValue$habi !== void 0 && _inputHabitValue$habi.includes(item.description)) {\n      var _mouthArray;\n\n      mouthArray = (_mouthArray = mouthArray) === null || _mouthArray === void 0 ? void 0 : _mouthArray.filter(value => value !== item.description);\n    } else mouthArray.push(item.description);\n\n    setInputHabitValue({ ...inputHabitValue,\n      [cb.target.name]: mouthArray\n    });\n  };\n\n  useEffect(() => {\n    getMouth().then(res => {\n      setMouth(res.data);\n    });\n  }, [inputCauseValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cause big-part\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"first-label\",\n      htmlFor: \"cause\",\n      children: \"Tri\\u1EC7u ch\\u1EE9ng tr\\xEAn mi\\u1EC7ng:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: mouth.map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        md: 4,\n        xxl: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => handleInputCauseValue(e),\n          type: \"checkbox\",\n          id: `cause${index + 1}`,\n          name: \"cause\",\n          value: `reason${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `cause${index + 1}`,\n          children: [\" \", item.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MountSynptom, \"7MHjOmj/sQRVc9t1dc3PMUTkHlg=\");\n\n_c = MountSynptom;\nexport default MountSynptom;\n\nvar _c;\n\n$RefreshReg$(_c, \"MountSynptom\");","map":{"version":3,"sources":["/home/ryan/School/KBS-diabetes-demo/src/components/MountSynptom.jsx"],"names":["React","useEffect","useState","Row","Col","getMouth","MountSynptom","inputCauseValue","setInputCauseValue","mouth","setMouth","handleCheckValue","item","cb","mouthArray","inputHabitValue","habit","map","el","includes","description","filter","value","push","setInputHabitValue","target","name","then","res","data","index","e","handleInputCauseValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;;AAGA,MAAMC,YAAY,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAA4C;AAChE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CADgE,CAEhE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,QAAMS,gBAAgB,GAAIC,IAAD,IAAWC,EAAD,IAAQ;AAAA;;AACzC,UAAMC,UAAU,GAAGC,eAAe,CAACC,KAAhB,CAAsBC,GAAtB,CAA2BC,EAAD,IAAQA,EAAlC,CAAnB;;AACA,4BAAGH,eAAH,sEAAG,iBAAiBC,KAApB,kDAAG,sBAAwBG,QAAxB,CAAiCP,IAAI,CAACQ,WAAtC,CAAH,EAAuD;AAAA;;AACrDN,MAAAA,UAAU,kBAAGA,UAAH,gDAAG,YAAYO,MAAZ,CAAoBC,KAAD,IAAUA,KAAK,KAAGV,IAAI,CAACQ,WAA1C,CAAb;AACD,KAFD,MAEON,UAAU,CAACS,IAAX,CAAgBX,IAAI,CAACQ,WAArB;;AACPI,IAAAA,kBAAkB,CAAC,EACjB,GAAGT,eADc;AAEjB,OAACF,EAAE,CAACY,MAAH,CAAUC,IAAX,GAAkBZ;AAFD,KAAD,CAAlB;AAID,GATD;;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,GAAGsB,IAAX,CAAiBC,GAAD,IAAS;AACvBlB,MAAAA,QAAQ,CAACkB,GAAG,CAACC,IAAL,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,CAACtB,eAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,OAAO,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AAAA,gBACGE,KAAK,CAACQ,GAAN,CAAU,CAACL,IAAD,EAAOkB,KAAP,kBACT,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,GAAG,EAAE,CAAxB;AAAA,gCACE;AACE,UAAA,QAAQ,EAAGC,CAAD,IAAOC,qBAAqB,CAACD,CAAD,CADxC;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,EAAE,EAAG,QAAOD,KAAK,GAAG,CAAE,EAHxB;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,KAAK,EAAG,SAAQA,KAAK,GAAG,CAAE;AAL5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAO,UAAA,OAAO,EAAG,QAAOA,KAAK,GAAG,CAAE,EAAlC;AAAA,0BAAuClB,IAAI,CAACQ,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAAgCU,KAAhC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAhDD;;GAAMxB,Y;;KAAAA,Y;AAkDN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { getMouth } from \"../apis/faceSkinApi\";\n\n\nconst MountSynptom = ({ inputCauseValue, setInputCauseValue }) => {\n  const [mouth, setMouth] = useState([])\n  // const handleInputCauseValue = (e) => {\n  //   const causeArr = inputCauseValue.cause.map((el) => el);\n  //   causeArr.push(e.target.value);\n\n  //   setInputCauseValue({\n  //     ...inputCauseValue,\n  //     [e.target.name]: causeArr,\n  //   });\n  // };\n  const handleCheckValue = (item) => (cb) => {\n    const mouthArray = inputHabitValue.habit.map((el) => el);\n    if(inputHabitValue?.habit?.includes(item.description)) {\n      mouthArray = mouthArray?.filter((value)=> value!==item.description)\n    } else mouthArray.push(item.description);\n    setInputHabitValue({\n      ...inputHabitValue,\n      [cb.target.name]: mouthArray,\n    });\n  }\n  useEffect(() => {\n    getMouth().then((res) => {\n      setMouth(res.data)\n    })\n  }, [inputCauseValue]);\n\n  return (\n    <div className=\"cause big-part\">\n      <label className=\"first-label\" htmlFor=\"cause\">\n        Triệu chứng trên miệng:\n      </label>\n      <Row>\n        {mouth.map((item, index) => (\n          <Col xs={6} md={4} xxl={3} key={index}>\n            <input\n              onChange={(e) => handleInputCauseValue(e)}\n              type=\"checkbox\"\n              id={`cause${index + 1}`}\n              name=\"cause\"\n              value={`reason${index + 1}`}\n            />\n            <label htmlFor={`cause${index + 1}`}> {item.description}</label>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default MountSynptom;\n"]},"metadata":{},"sourceType":"module"}
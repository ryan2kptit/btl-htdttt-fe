{"ast":null,"code":"var _jsxFileName = \"/home/ryan/School/btl-htdttt-fe/src/components/MountSynptom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { getMouth } from \"../apis/faceSkinApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MountSynptom = _ref => {\n  _s();\n\n  let {\n    inputMouthValue,\n    setInputMouthValue\n  } = _ref;\n  const [mouth, setMouth] = useState([]);\n\n  const handleCheckValue = item => cb => {\n    var _inputMouthValue$mout;\n\n    const mouthArray = inputMouthValue.mouth.map(el => el);\n\n    if (inputMouthValue !== null && inputMouthValue !== void 0 && (_inputMouthValue$mout = inputMouthValue.mouth) !== null && _inputMouthValue$mout !== void 0 && _inputMouthValue$mout.includes(item.description)) {\n      var _mouthArray;\n\n      mouthArray = (_mouthArray = mouthArray) === null || _mouthArray === void 0 ? void 0 : _mouthArray.filter(value => value !== item.description);\n    } else mouthArray.push(item.description);\n\n    setInputMouthValue({ ...inputMouthValue,\n      [cb.target.name]: mouthArray\n    });\n  };\n\n  useEffect(() => {\n    getMouth().then(res => {\n      setMouth(res.data);\n    });\n  }, [inputMouthValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"class mouth\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"first-label\",\n      htmlFor: \"class mouth\",\n      children: \"Tri\\u1EC7u ch\\u1EE9ng tr\\xEAn mi\\u1EC7ng:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: mouth.map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        md: 4,\n        xxl: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: handleCheckValue(item) // onChange={(e) => handleInputCauseValue(e)}\n          ,\n          type: \"checkbox\",\n          id: `mouth${index + 1}`,\n          name: \"mouth\",\n          value: `mouth${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `mouth${index + 1}`,\n          children: [\" \", item.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MountSynptom, \"7MHjOmj/sQRVc9t1dc3PMUTkHlg=\");\n\n_c = MountSynptom;\nexport default MountSynptom;\n\nvar _c;\n\n$RefreshReg$(_c, \"MountSynptom\");","map":{"version":3,"sources":["/home/ryan/School/btl-htdttt-fe/src/components/MountSynptom.jsx"],"names":["React","useEffect","useState","Row","Col","getMouth","MountSynptom","inputMouthValue","setInputMouthValue","mouth","setMouth","handleCheckValue","item","cb","mouthArray","map","el","includes","description","filter","value","push","target","name","then","res","data","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;;AAGA,MAAMC,YAAY,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAA4C;AAChE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMS,gBAAgB,GAAIC,IAAD,IAAWC,EAAD,IAAQ;AAAA;;AACzC,UAAMC,UAAU,GAAGP,eAAe,CAACE,KAAhB,CAAsBM,GAAtB,CAA2BC,EAAD,IAAQA,EAAlC,CAAnB;;AACA,QAAGT,eAAH,aAAGA,eAAH,wCAAGA,eAAe,CAAEE,KAApB,kDAAG,sBAAwBQ,QAAxB,CAAiCL,IAAI,CAACM,WAAtC,CAAH,EAAuD;AAAA;;AACrDJ,MAAAA,UAAU,kBAAGA,UAAH,gDAAG,YAAYK,MAAZ,CAAoBC,KAAD,IAAUA,KAAK,KAAGR,IAAI,CAACM,WAA1C,CAAb;AACD,KAFD,MAEOJ,UAAU,CAACO,IAAX,CAAgBT,IAAI,CAACM,WAArB;;AACPV,IAAAA,kBAAkB,CAAC,EACjB,GAAGD,eADc;AAEjB,OAACM,EAAE,CAACS,MAAH,CAAUC,IAAX,GAAkBT;AAFD,KAAD,CAAlB;AAID,GATD;;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,GAAGmB,IAAX,CAAiBC,GAAD,IAAS;AACvBf,MAAAA,QAAQ,CAACe,GAAG,CAACC,IAAL,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,CAACnB,eAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,OAAO,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AAAA,gBACGE,KAAK,CAACM,GAAN,CAAU,CAACH,IAAD,EAAOe,KAAP,kBACT,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,GAAG,EAAE,CAAxB;AAAA,gCACE;AACC,UAAA,OAAO,EAAEhB,gBAAgB,CAACC,IAAD,CAD1B,CAEE;AAFF;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,EAAE,EAAG,QAAOe,KAAK,GAAG,CAAE,EAJxB;AAKE,UAAA,IAAI,EAAC,OALP;AAME,UAAA,KAAK,EAAG,QAAOA,KAAK,GAAG,CAAE;AAN3B;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAO,UAAA,OAAO,EAAG,QAAOA,KAAK,GAAG,CAAE,EAAlC;AAAA,0BAAuCf,IAAI,CAACM,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAAgCS,KAAhC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAxCD;;GAAMrB,Y;;KAAAA,Y;AA0CN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { getMouth } from \"../apis/faceSkinApi\";\n\n\nconst MountSynptom = ({ inputMouthValue, setInputMouthValue }) => {\n  const [mouth, setMouth] = useState([])\n  const handleCheckValue = (item) => (cb) => {\n    const mouthArray = inputMouthValue.mouth.map((el) => el);\n    if(inputMouthValue?.mouth?.includes(item.description)) {\n      mouthArray = mouthArray?.filter((value)=> value!==item.description)\n    } else mouthArray.push(item.description);\n    setInputMouthValue({\n      ...inputMouthValue,\n      [cb.target.name]: mouthArray,\n    });\n  }\n  useEffect(() => {\n    getMouth().then((res) => {\n      setMouth(res.data)\n    })\n  }, [inputMouthValue]);\n\n  return (\n    <div className=\"class mouth\">\n      <label className=\"first-label\" htmlFor=\"class mouth\">\n        Triệu chứng trên miệng:\n      </label>\n      <Row>\n        {mouth.map((item, index) => (\n          <Col xs={6} md={4} xxl={3} key={index}>\n            <input\n             onClick={handleCheckValue(item)}\n              // onChange={(e) => handleInputCauseValue(e)}\n              type=\"checkbox\"\n              id={`mouth${index + 1}`}\n              name=\"mouth\"\n              value={`mouth${index + 1}`}\n            />\n            <label htmlFor={`mouth${index + 1}`}> {item.description}</label>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default MountSynptom;\n"]},"metadata":{},"sourceType":"module"}
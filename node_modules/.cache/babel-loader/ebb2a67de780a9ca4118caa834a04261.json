{"ast":null,"code":"var _jsxFileName = \"/home/ryan/School/KBS-diabetes-demo/src/components/BadLivingHabit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { getFaceSkin } from '../apis/faceSkinApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BadLivingHabit = _ref => {\n  _s();\n\n  let {\n    inputHabitValue,\n    setInputHabitValue\n  } = _ref;\n  const [faceSkins, setfaceSkins] = useState([]);\n\n  const handleInputHabitValue = e => {\n    console.log(\"dong11\", e.target);\n    const habitArr = inputHabitValue.habit.map(el => el);\n    habitArr.push(e.target.value);\n    setInputHabitValue({ ...inputHabitValue,\n      [e.target.name]: habitArr\n    });\n  };\n\n  const handleCheckValue = cb => {\n    var _inputHabitValue$habi;\n\n    console.log(\"dong22\", cb.target.checked);\n    const habitArr = inputHabitValue.habit.map(el => el);\n\n    if (inputHabitValue !== null && inputHabitValue !== void 0 && (_inputHabitValue$habi = inputHabitValue.habit) !== null && _inputHabitValue$habi !== void 0 && _inputHabitValue$habi.includes(cb.target.value)) {\n      const arrTemp = habitArr === null || habitArr === void 0 ? void 0 : habitArr.filter(value => value !== cb.target.value);\n    } else arrTemp;\n  };\n\n  useEffect(() => {\n    getFaceSkin().then(res => {\n      setfaceSkins(res.data);\n    });\n  }, [inputHabitValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bad-living-habit big-part\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"first-label\",\n      htmlFor: \"bad-living-habit\",\n      children: \"Tri\\u1EC7u ch\\u1EE9ng tr\\xEAn da m\\u1EB7t:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: faceSkins.map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        md: 4,\n        xxl: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: handleCheckValue,\n          onChange: e => handleInputHabitValue(e),\n          type: \"checkbox\",\n          id: `habit${index + 1}`,\n          name: \"habit\",\n          value: `bad-habit${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `habit${index + 1}`,\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BadLivingHabit, \"F9DmyvpvmX1tzntiPjb8S7DUnbQ=\");\n\n_c = BadLivingHabit;\nexport default BadLivingHabit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BadLivingHabit\");","map":{"version":3,"sources":["/home/ryan/School/KBS-diabetes-demo/src/components/BadLivingHabit.jsx"],"names":["React","useEffect","useState","Row","Col","getFaceSkin","BadLivingHabit","inputHabitValue","setInputHabitValue","faceSkins","setfaceSkins","handleInputHabitValue","e","console","log","target","habitArr","habit","map","el","push","value","name","handleCheckValue","cb","checked","includes","arrTemp","filter","then","res","data","item","index","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { getFaceSkin } from '../apis/faceSkinApi'\n\n\n\nconst BadLivingHabit = ({ inputHabitValue, setInputHabitValue }) => {\n  const [faceSkins, setfaceSkins] = useState([])\n  const handleInputHabitValue = (e) => {\n    console.log(\"dong11\",e.target)\n    const habitArr = inputHabitValue.habit.map((el) => el);\n    habitArr.push(e.target.value);\n\n    setInputHabitValue({\n      ...inputHabitValue,\n      [e.target.name]: habitArr,\n    });\n  };\n\n  const handleCheckValue = (cb) => {\n    console.log(\"dong22\", cb.target.checked)\n    const habitArr = inputHabitValue.habit.map((el) => el);\n    if(inputHabitValue?.habit?.includes(cb.target.value)) {\n      const arrTemp = habitArr?.filter((value)=> value!==cb.target.value)\n    } else arrTemp \n  }\n\n  useEffect(() => {\n    getFaceSkin().then((res)=> {\n      setfaceSkins(res.data)\n    })\n  }, [inputHabitValue]);\n\n  return (\n    <div className=\"bad-living-habit big-part\">\n      <label className=\"first-label\" htmlFor=\"bad-living-habit\">\n        Triệu chứng trên da mặt:\n      </label>\n      <Row>\n        {faceSkins.map((item, index) => (\n          <Col xs={6} md={4} xxl={3} key={index}>\n            <input\n              onClick={handleCheckValue}\n              onChange={(e) => handleInputHabitValue(e)}\n              type=\"checkbox\"\n              id={`habit${index + 1}`}\n              name=\"habit\"\n              value={`bad-habit${index + 1}`}\n            />\n            <label htmlFor={`habit${index + 1}`}>{item.description}</label>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default BadLivingHabit;\n"]},"metadata":{},"sourceType":"module"}